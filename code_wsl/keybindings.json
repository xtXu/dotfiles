// Place your key bindings in this file to override the defaultsauto[]
[
  /*
	file explorer & outline
	*/
  { // open file expoler use which key
    "key": "e",
    "command": "whichkey.triggerKey",
    "when": "whichkeyVisible && sideBarVisible && explorerViewletVisible",
    "args": {
      "key": "e",
      "when": "sideBarVisible && explorerViewletVisible"
    },
  },
  { // open outline use which key
    "key": "o",
    "command": "whichkey.triggerKey",
    // "when": "whichkeyVisible && outlinerExplorerView.active && view.outline.visible",
    "when": "whichkeyVisible && view.outline.visible",
    "args": {
      "key": "o",
      "when": "outlinerExplorerView.active && view.outline.visible"
    },
  },
  { // rename file
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  { // disable old style rename shortcut
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  { // toggle folder expand
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  { // collapse folder
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  { // new file
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  { // new folder
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  { // delete file or folder
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  { // move down
    "key": "j",
    "command": "list.focusDown",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  { // move up
    "key": "k",
    "command": "list.focusUp",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // cut file
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // copy file
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  // paste file
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  /*
	multi window navigaion (combined with vim)
	*/
  { // window move down
    "key": "ctrl+j",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
    "args": {
      "after": [
        "<c-w>",
        "j"
      ],
    }
  },
  { // window move up
    "key": "ctrl+k",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
    "args": {
      "after": [
        "<c-w>",
        "k"
      ],
    }
  },
  { // window move left
    "key": "ctrl+h",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
    "args": {
      "after": [
        "<c-w>",
        "h"
      ],
    }
  },
  { // window move right
    "key": "ctrl+l",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
    "args": {
      "after": [
        "<c-w>",
        "l"
      ],
    }
  },
  { // make cursor back to editor
    "key": "ctrl+shift+c",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!terminalFocus"
  },
  /*
	terminal
	*/
  { // toggle terminal
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active && vim.mode == 'Normal'"
  },
  { // maxmize terminal
    "key": "ctrl+m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  { // make cursor back to editor
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "panelFocus && activePanel"
  },
  /*
	search panel
	*/
  { // focus on search input box
    "key": "shift+tab",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "search.focus.previousInputBox",
        "search.focus.previousInputBox",
        "search.focus.previousInputBox",
        "search.focus.previousInputBox",
      ]
    },
    "when": "hasSearchResult && searchViewletFocus"
  },
  { // select without closing the panel
    "key": "o",
    "command": "list.select",
    "when": "listFocus && !inputFocus && hasSearchResult && searchViewletFocus"
  },
  { // select and close the panel
    "key": "enter",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "list.select",
        "workbench.action.toggleAuxiliaryBar",
      ]
    },
    "when": "listFocus && !inputFocus && hasSearchResult && searchViewletFocus"
  },
  /*
	code suggestion & compeletion
	*/
  { // select next
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  { // select previous
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  /*
	quickopen select
	*/
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  /*
	code reference (combined with vim : <leader> u to trigger reference search )
	*/
  { // open reference localtion without quit reference view
    "key": "o",
    "command": "revealReference",
    "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
  },
  { // open reference location with quit reference view
    "key": "enter",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "revealReference",
        "closeReferenceSearch"
      ]
    },
    "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
  },
  { // (when the reference view is in the panel same as terminal) do not close debug view when press enter
    "key": "enter",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "list.select",
        "workbench.action.togglePanel"
      ]
    },
    "when": "panelFocus && !inDebugRepl && activePanel!='workbench.panel.markers' && reference-list.source != 'callHierarchy' "
  },
  /*
	side bar
	*/
  { // toggle left(primary) sidebar
    "key": "alt+1",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  { // toggle right sidebar
    "key": "alt+2",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  /*
	problem navigation
	*/
  { // move down at problem open
    "key": "ctrl+shift+j",
    "command": "list.focusDown",
    "when": "panelFocus && activePanel == 'workbench.panel.markers' "
  },
  { // move up at problem open
    "key": "ctrl+shift+k",
    "command": "list.focusUp",
    "when": "panelFocus && activePanel == 'workbench.panel.markers' "
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  /*
	other insignficant
	*/
  {
    "key": "ctrl+p",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "!inputFocus"
  },
  // 行上移
  {
    "key": "shift+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // 行下移
  {
    "key": "shift+alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  { // focus on searching result
    "key": "tab",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "search.focus.nextInputBox",
        "search.focus.nextInputBox",
        "search.focus.nextInputBox",
        "search.focus.nextInputBox",
        "list.focusFirst",
      ]
    },
    "when": "hasSearchResult && searchViewletFocus"
  },
]