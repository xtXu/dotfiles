{
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[xml]": {
        "editor.defaultFormatter": "DotJoshJohnson.xml"
    },
    "files.exclude": {
        "**/.*": true
    },
    "editor.fontFamily": "Fira Code",
    "editor.fontLigatures": true,
    "editor.fontSize": 20,
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
    "editor.defaultFormatter": "xaver.clang-format",
    "editor.lineNumbers": "relative",
    "editor.wordWrap": "on",
    "extensions.autoUpdate": false,
    "terminal.integrated.fontFamily": "FiraCode Nerd Font ",
    "terminal.integrated.fontSize": 17,
    "workbench.colorTheme": "One Dark Pro",
    "workbench.layoutControl.enabled": true,
    "files.autoSave": "afterDelay",
    "update.mode": "manual",
    "cmake.configureOnOpen": false,
    "clang-format.fallbackStyle": "Google",
    "astyle.astylerc": "",
    /*
        setting for cpp-extension
    */
    "C_Cpp.autocomplete": "Disabled",
    "C_Cpp.intelliSenseEngine": "Disabled",
    "C_Cpp.clang_format_style": "Google",
    "C_Cpp.clang_format_fallbackStyle": "{BasedOnStyle: Google, IndentWidth: 2, ColumnLimit: 0}",
    "C_Cpp.clang_format_sortIncludes": false,
    "C_Cpp.commentContinuationPatterns": [
        "/**"
    ],
    /*
        setting for clangd
    */
    "clangd.path": "/home/xxt/.config/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/14.0.3/clangd_14.0.3/bin/clangd",
    "clangd.arguments": [
        "--compile-commands-dir=${workspaceFolder}/build",
        // "--query-driver=/usr/bin/clang-*,/usr/bin/g++-*",
        "--background-index", // 后台建立索引，并持久化到disk
        "--clang-tidy", // 开启clang-tidy
        // 指定clang-tidy的检查参数， 摘抄自cmu15445. 全部参数可参考 https://clang.llvm.org/extra/clang-tidy/checks
        "--clang-tidy-checks=bugprone-*, clang-analyzer-*, google-*, modernize-*, performance-*, portability-*, readability-*, -bugprone-too-small-loop-variable, -clang-analyzer-cplusplus.NewDelete, -clang-analyzer-cplusplus.NewDeleteLeaks, -modernize-use-nodiscard, -modernize-avoid-c-arrays, -readability-magic-numbers, -bugprone-branch-clone, -bugprone-signed-char-misuse, -bugprone-unhandled-self-assignment, -clang-diagnostic-implicit-int-float-conversion, -modernize-use-auto, -modernize-use-trailing-return-type, -readability-convert-member-functions-to-static, -readability-make-member-function-const, -readability-qualified-auto, -readability-redundant-access-specifiers,",
        "--completion-style=detailed",
        "--cross-file-rename=true",
        "--header-insertion=never",
        "--pch-storage=memory",
        // 启用这项时，补全函数时，将会给参数提供占位符，键入后按 Tab 可以切换到下一占位符
        "--function-arg-placeholders=true",
        "--log=verbose",
        "--ranking-model=decision_forest",
        // 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
        "--header-insertion-decorators",
        "-j=12",
        "--pretty"
        // 建议排序模型
    ],
    /*
        setting for vim
    */
    // 绑定vim前导键
    "vim.leader": "<space>",
    // "vim.leader": ";",
    // 防止折叠自动展开
    "vim.foldfix": true,
    // 启用easymotion插件
    "vim.easymotion": true,
    // easymotion插件背景暗化    
    "vim.easymotionDimBackground": false,
    // easymotion插件背景框颜色
    "vim.easymotionMarkerBackgroundColor": "#000000",
    // 启用系统粘贴板作为vim寄存器
    "vim.useSystemClipboard": true,
    // 由vim接管ctrl+any的按键，而不是vscode
    "vim.useCtrlKeys": true,
    // 突出显示与当前搜索匹配的所有文本
    "vim.hlsearch": true,
    // 递进搜索
    "vim.incsearch": true,
    // 启用sneak插件
    "vim.sneak": true,
    // 启用vimrc
    "vim.vimrc.enable": true,
    "vim.vimrc.path": "$HOME/.vsvimrc",
    // 下面定义的按键将交由vscode进行处理，而不是vscode-vim插件
    "vim.handleKeys": {
        // "<C-a>": false,
        "<C-f>": false,
        "<C-s>": false
    },
    // 普通模式下的非递归按键绑定
    /*
    The keymapping is defined in .vsvimrc
    */
    "vim.normalModeKeyBindings": [
        { //whichkey
            "before": [
                ";"
            ],
            "commands": [
                "whichkey.show"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        { // open float reference
            "before": [
                "<leader>",
                "u"
            ],
            "commands": [
                "editor.action.referenceSearch.trigger"
            ]
        },
        { // open reference in panel
            "before": [
                "<leader>",
                "U"
            ],
            "commands": [
                "references-view.findReferences"
            ]
        },
        { // show the call hierarchy of the selected item
            "before": [
                "<leader>",
                "i",
                "n"
            ],
            "commands": [
                "references-view.showCallHierarchy"
            ]
        },
        { // format document
            "before": [
                "<leader>",
                "f"
            ],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        { // -- rename symbol
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename",
            ]
        },
        // -- problem navigation
        {
            "before": [
                "<leader>",
                "d",
                "k"
            ],
            "commands": [
                "editor.action.marker.prev"
            ]
        },
        {
            "before": [
                "<leader>",
                "d",
                "j"
            ],
            "commands": [
                "editor.action.marker.next"
            ]
        },
        // -- git hunk navigation
        {
            "before": [
                "<leader>",
                "h",
                "k"
            ],
            "commands": [
                "workbench.action.editor.previousChange",
                "editor.action.dirtydiff.previous"
            ]
        },
        {
            "before": [
                "<leader>",
                "h",
                "j"
            ],
            "commands": [
                "workbench.action.editor.nextChange",
                "editor.action.dirtydiff.next"
            ]
        },
        // // git (un)stage 
        // {
        // 	"before": [
        // 		"<leader>",
        // 		"h",
        // 		"s"
        // 	],
        // 	"commands": [
        // 		"git.stage",
        // 	]
        // },
        // {
        // 	"before": [
        // 		"<leader>",
        // 		"h",
        // 		"u"
        // 	],
        // 	"commands": [
        // 		"git.unstage",
        // 	]
        // },
        // git revert
        {
            "before": [
                "<leader>",
                "h",
                "r"
            ],
            "commands": [
                "git.revertSelectedRanges",
            ]
        },
        // {
        //     "before":[
        //         "z",
        //         "z"
        //     ],
        //     "commands":[
        //         "editor.toggleFold"
        //     ]
        // },
    ],
    // 插入模式下的非递归按键绑定
    "vim.insertModeKeyBindings": [],
    // 命令模式下的非递归按键绑定
    "vim.commandLineModeKeyBindingsNonRecursive": [],
    // 可视模式下的非递归按键绑定
    "vim.visualModeKeyBindings": [
        {
            "before": [
                ">",
            ],
            "after": [
                ">",
                "g",
                "v"
            ]
        },
        {
            "before": [
                "<",
            ],
            "after": [
                "<",
                "g",
                "v"
            ]
        },
    ],
    /*
        setting for whichkey
    */
    "whichkey.bindings": [
        {
            "key": "e",
            "name": "Show tree/explorer view",
            "type": "conditional",
            "bindings": [
                {
                    "key": "",
                    "name": "default",
                    "type": "command",
                    "command": "workbench.view.explorer"
                },
                {
                    "key": "when:sideBarVisible && explorerViewletVisible",
                    "name": "Hide explorer",
                    "type": "command",
                    "command": "workbench.action.toggleSidebarVisibility"
                }
            ],
        },
        {
            "key": "o",
            "name": "Outline",
            "type": "conditional",
            "bindings": [
                {
                    "key": "",
                    "name": "default",
                    "type": "command",
                    "command": "extension.multiCommand.execute",
                    "args": {
                        "sequence": [
                            "outline.focus",
                            "outline.focus",
                        ]
                    },
                },
                {
                    "key": "when:outlinerExplorerView.active && view.outline.visible",
                    "name": "Hide outline",
                    "type": "command",
                    "command": "workbench.action.toggleAuxiliaryBar"
                }
            ],
        },
        {
            "key": "g",
            "name": "Source contrl",
            "type": "command",
            "command": "workbench.view.scm",
        },
        {
            "command": "workbench.action.quickOpen",
            "key": "f",
            "name": "Find file",
            "type": "command"
        },
        {
            "command": "workbench.view.search",
            "key": "F",
            "name": "Search Word",
            "type": "command"
        },
        {
            "command": "search.action.openEditor",
            "key": "w",
            "name": "New Search Editor",
            "type": "command"
        },
        {
            "command": "workbench.action.gotoSymbol",
            "key": "s",
            "name": "Search document symbol",
            "type": "command"
        },
        {
            "command": "workbench.action.showAllSymbols",
            "key": "S",
            "name": "Search project symbol",
            "type": "command"
        },
    ],
}